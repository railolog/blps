openapi: 3.0.0

info:
  description: API scheme for pokebet
  version: "1.0.0"
  title: pokebet

tags:
  - name: pokemon

servers:
  - url: http://localhost:8080

paths:

  /auth/signup:
    post:
      operationId: signUp
      tags: [ auth ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/SignUpRequestTo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/JwtResponseTo'

  /auth/signin:
    post:
      operationId: signIn
      tags: [ auth ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/SignInRequestTo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/JwtResponseTo'

  /tenders/new:
    post:
      operationId: createTender
      tags: [ tender ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/CreateTenderRequestTo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/CreateTenderResponseTo'

  /tenders:
    get:
      operationId: getTenders
      description: Получение всех открытых тендеров
      tags:
        - tender
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
            default: 10
            description: The number of items to return at one time (max 100)
        - in: query
          name: offset
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/TenderListResponseTo'

  /tenders/my:
    get:
      operationId: getMyTenders
      description: Получение тендеров пользователя
      tags:
        - tender
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
            default: 10
            description: The number of items to return at one time (max 100)
        - in: query
          name: offset
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/TenderListResponseTo'

  /tenders/by-status:
    get:
      operationId: getTendersByStatus
      description: Получение тендеров по статусам (админ)
      tags:
        - tender
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
            default: 10
            description: The number of items to return at one time (max 100)
        - in: query
          name: offset
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: status
          schema:
            type: string
            enum: [ in_dispute, accepted, not_accepted ]
            default: in_dispute
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/TenderListResponseTo'

  /tenders/by-id/{id}:
    get:
      operationId: getTenderById
      tags: [ tender ]
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/idPathParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/TenderResponseTo'

  /tenders/finish/{id}:
    post:
      operationId: finishTender
      description: Информация от поставщика о выполнении заказа
      tags: [ tender ]
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/idPathParam'
      responses:
        200:
          description: OK

  /tenders/accept-completion/{id}:
    post:
      operationId: acceptCompletion
      tags: [ tender ]
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/idPathParam'
      responses:
        200:
          description: OK

  /offers/decline/{id}:
    post:
      operationId: declineOffer
      tags:
        - offer
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/idPathParam'
      responses:
        200:
          description: OK
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/ErrorResponseTo'

  /offers/accept/{id}:
    post:
      operationId: acceptOffer
      tags:
        - offer
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/idPathParam'
      responses:
        200:
          description: OK

  /offers/new:
    post:
      operationId: createOffer
      tags: [ offer ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/CreateOfferRequestTo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/CreateOfferResponseTo'

  /offers/my:
    get:
      operationId: getSupplierOffers
      description: Получение предложений поставщика
      tags: [ offer ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/OfferListResponseTo'

  /offers/by-id/{id}:
    get:
      operationId: getOfferById
      tags: [ offer ]
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/idPathParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/OfferResponseTo'

  /offers/by-tender/{id}:
    get:
      operationId: getOffersByTenderId
      tags: [ offer ]
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/idPathParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/OfferListResponseTo'

  /complaints/create:
    post:
      operationId: createComplaint
      tags: [ complaint ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/ComplaintRequestTo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/ComplaintCreateResponseTo'

  /complaints/{id}:
    get:
      operationId: getComplaintByTenderId
      tags: [ complaint ]
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/idPathParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/ComplaintResponseTo'

  /complaints/resolve:
    post:
      operationId: resolveComplaint
      tags: [ complaint ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/ResolutionRequestTo'
      responses:
        200:
          description: OK
